# Восстановите строку по её коду и беспрефиксному коду символов.
#
# В первой строке входного файла заданы два целых числа k и l через пробел
# — количество различных букв, встречающихся в строке, и размер получившейся
# закодированной строки, соответственно. В следующих k строках записаны
# коды букв в формате "letter: code". Ни один код не является префиксом другого.
# Буквы могут быть перечислены в любом порядке. В качестве букв могут встречаться
# лишь строчные буквы латинского алфавита; каждая из этих букв встречается
# в строке хотя бы один раз. Наконец, в последней строке записана закодированная
# строка. Исходная строка и коды всех букв непусты. Заданный код таков,
# что закодированная строка имеет минимальный возможный размер.
#
# В первой строке выходного файла выведите строку s. Она должна состоять из
# строчных букв латинского алфавита. Гарантируется, что длина правильного ответа
# не превосходит 104 символов.

out = ""
k, l = map(int,input().split())

sym, cd = [],[]
for i in range(k):
    s, c = input().split()
    s=s[:-1]
    #c = int(c)
    sym.append(s)
    cd.append(c)
#print(sym,cd)

haff=input()

while len(haff)>0:
    for i in range(0,len(cd)):
        if haff.startswith(cd[i]):
            out=out+sym[i]
            haff=haff[len(cd[i]):]
print(out)
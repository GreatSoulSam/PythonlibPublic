#
#
#
#ореn(<Путь к файлу>[, mode='r'] [, buffering=-1] [, encoding=None] [,
#    errors=None] [, newline=None] [, closefd=True])

#Путь к файлу: абсолютный или относительный

#Абсолютный: слеш \ заменяем на двойной \\, т.к. одинарный - спецсимвол
#"C:\\temp\\new\\file.txt" - OK
#r"C:\temp\new\file.txt" - OK - неформатированная строка

#Относительный: определяется с учетом местоположения текущего рабочего каталога
#Относительный путь будет автоматически преобразован в абсолютный
# с помощью функции abspath() из модуля os. path.

#ПРимеры

#если открываемый файл находится в текущем рабочем каталоге, то можно указать
# только название файла.
#import os.path
# Файл в текущем рабочем каталоге (C:\book\)
#os.path.abspath(r"file.txt")


#если открываемый файл расположен во вложенной папке, то
# перед названием файла перечисляются названия вложенных папок через слэш.

# Открьmаемый файл в C:\book\folderl\
# os.path.abspath(r"folder1/file.txt")
# 'C:\\book\\folderl\\file.txt'

# Открьmаемый файл в C:\book\folderl\folder2\
# os.path.abspath(r"folderl/folder2/file.txt")
# 'C:\\book\\folderl\\folder2\\file.txt'


#если папка с файлом расположена ниже уровнем, то перед названием файла
# указываются две точки и слэш (" .. /").

# Открьтаемый файл в С:\
# os.path.abspath(r" .. /file.txt")
# 'C:\\file.txt'


#если в начале пути расположен слэш, то путь отсчитывается от корня диска.
# В этом случае местоположение текущего рабочего каталога не имеет значения.

# Открьтаемый файл в C:\book\folderl\
# os.path.abspath(r"/book/folderl/file.txt")
# 'C:\\book\\folderl\\file.txt'

# Открьmаемьм файл в C:\book\folderl\folder2\
# os.path.abspath(r"/book/folderl/folder2/file.txt")
# 'C:\\book\\folderl\\folder2\\file.txt'


#В абсолютном и относительном пути можно указать как прямые, так и обратные слэши.
# Всеслэши будут автоматически· преобразованы с учетом значения
# атрибута sep из модуля os .path.


#Чтобы nоиск файла всегда nроизводился в каталоге с исnолняемым файлом,
# необходимо этот каталог сделать текущим с nомощью функции chdir () из модуля os.

import os, sys
# Делаем каталог с исполняемьы файлом текущим
os.chdir(os.path.dirname(os.path.abspath(__file__) ) )
print("%-25s%s"% ("Файл:", __file__ ))
print("%-25s%s"% ("Текущий рабочий каталог:", os.getcwd()))
print("%-25s%s"% ("Каталог для импорта:", sys.path[0]))
print("%-25s%s"% ("Путь к файлу:", os.path.abspath("file.txt")))

#С nомощью атрибута _file_ мы nолучаем nуть к исnолняемому файлу
# вместе с названием файла.
#Чтобы всегда nолучать nолный nуть к файлу, следует nередать значение
# атрибута в функцию abspath () из модуля os .path.
#Далее мы извлекаем nуть (без названия файла) с nомощью функции dirname()
# и nередаем его функции chdir(). Теnерь если в функции open() указать
# название файла без nути, то nоиск будет nроизводиться в каталоге с этим файлом.

################################################################
#текущим рабочим каталогом будет каталог, из которого заnускается файл,
# а не каталог, в котором расnоложен исnолняемый файл. Кроме того,
# nути nоиска файлов не имеют никакого отношения к nутям nоиска модулей.
###################################################################

#Необязательный nараметр mode в функции open () может nринимать следующие значения:

#1) r - только чтение (значение по умолчанию). После открытия файла указатель
# устанавливается на начало файла. Если файл не существует,
# то возбуждается исключение IOError;

#2) r+ - чтение и заnись. После открытия файла указатель
# устанавливается на начало файла.

#3) w - заnись. Если файл не существует, то он будет создан. Если файл существует,
# то он будет nерезаnисан. После открытия файла указатель
# устанавливается на начало файла;

#4) w+ - w+- чтение и заnись. Если файл не существует, то он будет создан.
# Если файл существует, то он будет nерезаnисан. После открытия файла
# указатель устанавливается на начало файла;

#5) a - заnись. Если файл не существует, то он будет создан. Заnись
# осуществляется в конец файла. Содержимое файла не удаляется;

#6) a+ - чтение и заnись. Если файл не существует, то он будет создан.
# Заnись осуществляется в конец файла. Содержимое файла не удаляется

######################
#После режима может идти моификатор:
#b - файл будет открыт в бинарном режиме. Файловые методы nри н и мают и возвращают
#объекты тиnа bytes;

# t - файл будет открыт в текстовом режиме (значение по умолчанию в Windows).
# Файловые методы nринимают и возвращают объекты тиnа str. В этом режиме
# в Windows nри чтении символ \r будет удален, а nри заnиси, наоборот, добавлен.
